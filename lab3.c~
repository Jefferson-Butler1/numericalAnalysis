#include <stdio.h>
#include <complex.h>
#include "syntheticDivide.h"
#include "newtonsMethod.h"

#define MAX_DEGREE 20
#define TOLERANCE 0.0001

int main()
{
    int n, i;
    complex double poly[MAX_DEGREE + 1];
    complex double constant, result[MAX_DEGREE + 1], remainder[MAX_DEGREE + 1];
    double tempImag, tempReal;
    printf("Enter the degree of the polynomial: ");
    scanf("%d", &n);

    printf("Enter the coefficients of the polynomial:\n");
    for (i = n; i >= 0; i--)
    {
        printf("a%d: ", i);
	scanf("%lf",&tempReal);
	poly[i] =tempReal + 0 * I;
    }

    for (i = 1; i <= n; i++)
    {
        constant = newtonsMethod(0, poly, n, TOLERANCE);
        syntheticDivide(poly, n, constant, result, remainder);

        n--;
        for (int j = 0; j <= n; j++)
        {
            poly[j] = result[j];
        }
        printf("Root %d: %lf + %lfi\n", i, creal(constant), cimag(constant));
    }

    printf("Root %d: %lf + %lfi\n", n + 1, creal(result[0]), cimag(result[0]));

    return 0;
}
